name: code-npm-release

on:
  pull_request:
    branches:
      - main
  push:
    paths:
      - 'combined/2/code/**'
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  code-npm-verify:
    uses: ./.github/workflows/code-npm-verify.yml
    with:
      code-path: 'combined/2/code'

  generate-version:
    needs: code-npm-verify
    name: Generate Version 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'	

      - name: Run semantic versioning
        id: semantic-release       
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}              
        run: |
          npm install -g semantic-release@24.2.0 @semantic-release/changelog@6.0.3 @semantic-release/git@10.0.1 @semantic-release/exec@6.0.3
          npx semantic-release

  build-and-push:
    needs: generate-version
    name: Build and push image to ECR
    runs-on: ubuntu-latest
    env:
      APP_NAME: 'webapp'
      CODE_PATH: 'combined/2/code'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ vars.GH_AWS_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ vars.AWS_REGION }}
    
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get image name
        id: get-image-name
        working-directory: ${{ env.CODE_PATH }}
        env:
          NEXT_RELEASE_VERSION: ${{ env.NEXT_RELEASE_VERSION }}
        run: |
          ARTIFACT_NAME=$(npm pkg get name | tr -d '"')
          echo "result=$ARTIFACT_NAME:$NEXT_RELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: Build image and push to ECR
        id: build-image-push
        working-directory: ${{ env.CODE_PATH }}
        env:
          ECR_REPOSITORY: "${{ env.APP_NAME }}-ecr"
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_NAME: ${{ steps.get-image-name.outputs.result }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME
      
      - name: Prepare next development iteration
        id: prepare-next-iteration
        working-directory: ${{ env.CODE_PATH }}
        run: |
          npm version $NEXT_RELEASE_VERSION-SNAPSHOT --no-git-tag-version
          git status
          
      - name: Commit changes
        id: commit-changes
        working-directory: ${{ env.CODE_PATH }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json CHANGELOG.md
          git commit m "ci: prepare next development iteration"
          git push
