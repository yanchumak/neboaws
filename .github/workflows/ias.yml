name: ias
 
on:
 push:
   branches:
   - main
   paths:
   - combined/2/ias/environments/dev/**
 pull_request:
   branches:
   - main
   paths:
   - combined/2/ias/environments/dev/**
 
env:
 BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}
 BUCKET_TF_REGION: ${{ secrets.BUCKET_TF_REGION}}
 
permissions:
  contents: write
  id-token: write

jobs:
 terraform:
   name: "Terraform Infrastructure Change Management"
   runs-on: ubuntu-latest
   defaults:
     run:
       shell: bash
       working-directory: ./combined/2/ias/environments/dev
 
   steps:
     - name: Checkout the repository to the runner
       uses: actions/checkout@v2

     - name: Configure aws credentials
       uses: aws-actions/configure-aws-credentials@v1.7.0
       with:
        role-to-assume: ${{ vars.GH_AWS_ROLE_ARN }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ vars.AWS_REGION }}
    
     - name: Setup Terraform with specified version on the runner
       uses: hashicorp/setup-terraform@v2
       with:
         terraform_version: 1.10.1
    
     - name: Terraform init
       id: init
       run: terraform init -backend-config="bucket=$BUCKET_TF_STATE" -backend-config="region=$BUCKET_TF_REGION" 
 
     - name: Terraform format
       id: fmt
       run: terraform fmt -check
    
     - name: Terraform validate
       id: validate
       run: terraform validate
 
     - name: Terraform plan
       id: plan
       if: github.event_name == 'pull_request'
       run: terraform plan -no-color -input=false -var region="${{ vars.AWS_REGION }}" 
       continue-on-error: true
 
     - name: Terraform Plan Status
       if: steps.plan.outcome == 'failure'
       run: exit 1
 
     - name: Terraform Apply
       if: github.ref == 'refs/heads/main' && github.event_name == 'push'
       run: terraform apply -auto-approve -input=false -var region="${{ vars.AWS_REGION }}" 